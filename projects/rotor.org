#+TITLE: Rotor
#+LANGUAGE: en
#+CREATOR: Emacs 25.2.2 (Org mode 9.1.13)
#+FILETAGS: noexport

* Detection of I2C memory using bus pirate


#+BEGIN_SRC
➜  ~ sudo picocom -b 115200 /dev/ttyUSB0
Hasło: 
picocom v2.2

port is        : /dev/ttyUSB0
flowcontrol    : none
baudrate is    : 115200
parity is      : none
databits are   : 8
stopbits are   : 1
escape is      : C-a
local echo is  : no
noinit is      : no
noreset is     : no
nolock is      : no
send_cmd is    : sz -vv
receive_cmd is : rz -vv -E
imap is        : 
omap is        : 
emap is        : crcrlf,delbs,

Type [C-a] [C-h] to see available commands

Terminal ready

HiZ>m
1. HiZ
2. 1-WIRE
3. UART
4. I2C
5. SPI
6. 2WIRE
7. 3WIRE
8. LCD
9. DIO
x. exit(without change)

(1)>4
Set speed:
 1. ~5KHz
 2. ~50KHz
 3. ~100KHz
 4. ~400KHz

(1)>3 
Ready
I2C>P
Pull-up resistors ON
Warning: no voltage on Vpullup pin
I2C>W
Power supplies ON
I2C>P
Pull-up resistors ON
I2C>v
Pinstates:
1.(BR)	2.(RD)	3.(OR)	4.(YW)	5.(GN)	6.(BL)	7.(PU)	8.(GR)	9.(WT)	0.(Blk)
GND	3.3V	5.0V	ADC	VPU	AUX	SCL	SDA	-	-
P	P	P	I	I	I	I	I	I	I	
GND	3.42V	4.99V	0.00V	4.98V	L	H	H	H	H	
I2C>(1)
Searching I2C address space. Found devices at:
0xA0(0x50 W) 0xA1(0x50 R) 0xA2(0x51 W) 0xA3(0x51 R) 0xA4(0x52 W) 0xA5(0x52 R) 0xA6(0x53 W) 0xA7(0x53 R) 0xA8(0x54 W) 0xA9(0x54 R) 0xAA(0x55 W) 0xAB(0x55 R) 0xAC(0x56 W) 0xAD(0x56 R) 0xAE(0x57 W) 0xAF(0x57 R) 

I2C>

#+END_SRC

First we set the address and we see some data

#+BEGIN_SRC
I2C>[0xa0 0]
I2C START BIT
WRITE: 0xA0 ACK 
WRITE: 0x00 ACK 
I2C STOP BIT
I2C>[0xa1 r:100]
I2C START BIT
WRITE: 0xA1 ACK 
READ: 
0xFF  ACK 0xFF  ACK 0xFF  ACK 0xFF  ACK 0xFF  ACK 0xFF  ACK 0xFF  ACK 0xFF  ACK 0xFF  ACK 0xFF  ACK 0xFF  ACK 0xFF  ACK 0xFF  ACK 0xFF  ACK 0xFF  ACK 0xFF  ACK 
0xA4  ACK 0xA4  ACK 0xA4  ACK 0xA4  ACK 0xA4  ACK 0xA4  ACK 0xA3  ACK 0xAC  ACK 0xA4  ACK 0xA0  ACK 0xA4  ACK 0xA0  ACK 0xA4  ACK 0xA0  ACK 0xA3  ACK 0xAC  ACK 
0xA4  ACK 0xA4  ACK 0xA4  ACK 0xA4  ACK 0xA4  ACK 0xA4  ACK 0xA4  ACK 0xA4  ACK 0xA4  ACK 0xA4  ACK 0xA3  ACK 0xA7  ACK 0xA4  ACK 0xA4  ACK 0xA4  ACK 0xA4  ACK 
0xA4  ACK 0xA4  ACK 0xA4  ACK 0xA4  ACK 0xA4  ACK 0x98  ACK 0xA3  ACK 0x92  ACK 0xA4  ACK 0x03  ACK 0xA4  ACK 0x43  ACK 0xA4  ACK 0x83  ACK 0xA4  ACK 0x83  ACK 
0xA3  ACK 0xA5  ACK 0xA4  ACK 0xA4  ACK 0xA3  ACK 0xA4  ACK 0xA4  ACK 0xA8  ACK 0xA3  ACK 0xA4  ACK 0xA3  ACK 0xA4  ACK 0xA3  ACK 0xA4  ACK 0xA4  ACK 0xA8  ACK 
0xA4  ACK 0xA4  ACK 0xA4  ACK 0xA4  ACK 0xA4  ACK 0xA4  ACK 0xA4  ACK 0x1C  ACK 0xA3  ACK 0xA0  ACK 0xA3  ACK 0xA0  ACK 0xA3  ACK 0xA0  ACK 0xA4  ACK 0xAC  ACK 
0xA4  ACK 0xA4  ACK 0xA4  ACK 0xA4 
NACK
I2C STOP BIT
I2C>

#+END_SRC

